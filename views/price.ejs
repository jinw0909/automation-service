<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bitcoin Analysis</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/chartjs-adapter-date-fns"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <style>
        .result-div {
            border: 1px solid #ccc;
            padding: 10px;
            margin: 10px 0;
        }
    </style>
</head>
<body>
<h3>BTC Price and Goyascore Movement 24 Hours</h3>
<canvas id="dayChart" width="400" height="200"></canvas>
<h3>BTC Price and Goyascore Movement 7 Days</h3>
<canvas id="weekChart" width="400" height="200"></canvas>
<h3>BTC Price and Goyascore Movement 30 Days</h3>
<canvas id="monthChart" width="400" height="200"></canvas>
<div>
    <button id="create">Create Analysis</button>
</div>
<div id="results"></div>
<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="https://unpkg.com/axios/dist/axios.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const data = <%- JSON.stringify(data) %>;
        const scoreDay = JSON.parse(data.scoreDay);
        const scoreWeek = JSON.parse(data.scoreWeek);
        const scoreMonth = JSON.parse(data.scoreMonth);

        // Debugging: Check the data format
        console.log("data: ", data);
        console.log("scoreDay: ", scoreDay);
        console.log("scoreWeek: ", scoreWeek);
        console.log("scoreMonth: ", scoreMonth);

        // Function to create chart
        function createChart(ctx, labels, scoreData, priceData) {
            return new Chart(ctx, {
                type: 'line',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Price',
                        data: priceData,
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1,
                        yAxisID: 'y',
                        cubicInterpolationMode: 'monotone',
                        tension: 0.4
                    }, {
                        label: 'Score',
                        data: scoreData,
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1,
                        yAxisID: 'y1',
                        cubicInterpolationMode: 'monotone',
                        tension: 0.4
                    }]
                },
                options: {
                    scales: {
                        y: {
                            type: 'linear',
                            position: 'left'
                        },
                        y1: {
                            type: 'linear',
                            position: 'right'
                        }
                    }
                }
            });
        }

        // Day chart
        const ctxDay = document.getElementById('dayChart').getContext('2d');
        createChart(ctxDay, Array.from({ length: 24 }, (_, i) => `Hour ${i + 1}`), scoreDay.score, scoreDay.price);

        // Week chart
        const ctxWeek = document.getElementById('weekChart').getContext('2d');
        createChart(ctxWeek, ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'], scoreWeek.score, scoreWeek.price);

        // Month chart
        const ctxMonth = document.getElementById('monthChart').getContext('2d');
        createChart(ctxMonth, Array.from({ length: 28 }, (_, i) => `Day ${i + 1}`), scoreMonth.score, scoreMonth.price);

        document.querySelector('#create').addEventListener('click', function() {
            axios.get('/chart/analysis').then((response) => {
                const data = response.data;
                console.log("response: ", response.data);
                const resultsContainer = document.getElementById('results');
                resultsContainer.innerHTML = '';
                for (const key in data) {
                    if (data.hasOwnProperty(key)) {
                        const div = document.createElement('div');
                        div.className = 'result-div';
                        div.innerHTML = `<strong>${key.charAt(0).toUpperCase() + key.slice(1)}:</strong> ${data[key]}`;
                        resultsContainer.appendChild(div);
                    }
                }
            }).catch(error => {
                console.error(error);
            })
        });
    })
</script>
</body>
</html>
